from collection import defaultdict

@@@@@@@@@@@@@@@@@@ dict1.keys()   dict1.values()  dict1.item() ======>  it will return key and value pair at same time

******************************
ss=defaultdict(list) =====> default value will be list
ss1=defaultdict(lambda:1)  ===>default value is 1
**********************************

from collection import OrderedDict
ss=OrderedDict()
it is same as dict except order of insertion 
not same as defaultdict

*******************************

preapring dictionary from keys

ss="1212118282829230"
dd=OrderedDict.fromkeys(ss,0)  ======>>> here 0 is inital value ,ss  is nput keys
order will maintain
input may be list or tuple also

*********************************

soting
dict1={'b':23,'a':222,'c':2}
sorted_keys=sorted(dict1.keys(),reverse=True) is will want reverse this is enough
sorted_base_values_getting_keys_values_pairs_in_tuple_in_list=sorted_keys(dict1.items(),lambda x :x[1],reverse=True)

Output:[('a',222),('b',23),('c',2)]
